// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  EMPLOYEE
  ADMIN
}

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  email          String   @unique
  saltedPassword String
  firstName      String
  lastName       String
  role           Role     @default(EMPLOYEE)
}

enum ServiceTheme {
  REPAIR_MAINTENANCE
  REVIEW
  DIAGNOSTIC
  CAR_BODY_AND_PAINTING
  ADMIN
  OTHER
}

model RepairService {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  theme     ServiceTheme
  name      String
  price     Float
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model Timetable {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  day          Day      @unique
  businessHour String
}

model Setting {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  phone     String
  address   String
}

enum ReviewStatus {
  PENDING
  REJECTED
  VALIDATED
}

model Review {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  comment String
  score Int
  status ReviewStatus
}

enum EnergyType {
  DIESEL
  PETROL
  ELECTRIC
  HYBRID
}

enum GearBoxType {
  MANUAL
  AUTOMATIC
}

enum OptionTheme {
  INSIDE
  OUTSIDE
  SAFETY
  OTHER
}

model Car {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  brand String
  model String
  
  price Int
  firstCirculationDate DateTime
  mileage Int
  energy EnergyType
  gearBox GearBoxType
  insideColor String
  outsideColor String
  carOptions CarOptions[]
  carPictures carPicture[]
}

model CarOptions {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  theme OptionTheme
  car Car @relation(fields: [carId], references: [id])
  carId Int
}

model carPicture {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  fileUrl String
  car Car @relation(fields: [carId], references: [id])
  carId Int
}